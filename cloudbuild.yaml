steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/silent-octagon-460701-a0/users-frontend/users-frontend:$BUILD_ID'
      - '.'

  # Step 2: Push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/silent-octagon-460701-a0/users-frontend/users-frontend:$BUILD_ID'

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud config set project silent-octagon-460701-a0
        gcloud run deploy users-frontend \
          --image us-central1-docker.pkg.dev/silent-octagon-460701-a0/users-frontend/users-frontend:$BUILD_ID \
          --region us-central1 \
          --platform managed \
          --service-account shopshere-product-service@silent-octagon-460701-a0.iam.gserviceaccount.com \
          --allow-unauthenticated

  # Step 4: Upload and Import SQL into Cloud SQL
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        PROJECT_ID=silent-octagon-460701-a0
        INSTANCE_NAME=dev-mysql-instance
        DB_NAME=dev_db
        SQL_FILE=db/dev/init.sql
        BUCKET_NAME=${PROJECT_ID}-cloudbuild-sql
        SQL_GCS_URI=gs://${BUCKET_NAME}/init.sql

        gcloud config set project $PROJECT_ID

        # Create bucket if not exists
        if ! gsutil ls gs://$BUCKET_NAME >/dev/null 2>&1; then
          gsutil mb -p $PROJECT_ID gs://$BUCKET_NAME
        fi

        echo "Waiting for Cloud SQL instance to be ready..."
        for i in {1..30}; do
          STATUS=$(gcloud sql instances describe $INSTANCE_NAME --format='get(state)')
          if [[ "$STATUS" == "RUNNABLE" ]]; then
            break
          fi
          sleep 10
        done

        echo "Uploading SQL file..."
        gsutil cp $SQL_FILE $SQL_GCS_URI

        echo "Importing SQL into $DB_NAME..."
        gcloud sql import sql $INSTANCE_NAME $SQL_GCS_URI --database=$DB_NAME --quiet

options:
  logging: CLOUD_LOGGING_ONLY
