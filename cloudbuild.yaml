steps:
  # 1. Terraform Init
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'terraform'
    args: ['init']
    dir: 'terraform'

  # 2. Terraform Apply
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'terraform'
    args: ['apply', '-auto-approve']
    dir: 'terraform'

  # 3. Build Docker images for all environments
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/silent-octagon-460701-a0/project4-dev/dev:${_BUILD_ID}'
      - '-t'
      - 'us-central1-docker.pkg.dev/silent-octagon-460701-a0/project4-stg/stg:${_BUILD_ID}'
      - '-t'
      - 'us-central1-docker.pkg.dev/silent-octagon-460701-a0/project4-prd/prd:${_BUILD_ID}'
      - '.'

  # 4. Push Docker images
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/silent-octagon-460701-a0/project4-dev/dev:${_BUILD_ID}'
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/silent-octagon-460701-a0/project4-stg/stg:${_BUILD_ID}'
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/silent-octagon-460701-a0/project4-prd/prd:${_BUILD_ID}'

  # 5. Apply Cloud Deploy pipeline (you only need to run this if the pipeline changes)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'deploy', 'apply',
        '--file=clouddeploy.yaml',
        '--region=us-central1'
      ]

  # 6. Create Cloud Deploy release
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'deploy', 'releases', 'create',
        'release-${_BUILD_ID}',
        '--delivery-pipeline=flask-pipeline',
        '--region=us-central1',
        '--images=dev=us-central1-docker.pkg.dev/silent-octagon-460701-a0/project4-dev/dev:${_BUILD_ID}',
        '--images=stg=us-central1-docker.pkg.dev/silent-octagon-460701-a0/project4-stg/stg:${_BUILD_ID}',
        '--images=prd=us-central1-docker.pkg.dev/silent-octagon-460701-a0/project4-prd/prd:${_BUILD_ID}',
        '--from-run-manifest=service-dev.yaml',
        '--description=automated release'
      ]

  # 7. Promote to staging (approval required in Cloud Deploy unless verify:false)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'deploy', 'releases', 'promote',
        '--release=release-${_BUILD_ID}',
        '--delivery-pipeline=flask-pipeline',
        '--region=us-central1',
        '--to-target=stg'
      ]

  # 8. Promote to production (approval required in Cloud Deploy unless verify:false)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'deploy', 'releases', 'promote',
        '--release=release-${_BUILD_ID}',
        '--delivery-pipeline=flask-pipeline',
        '--region=us-central1',
        '--to-target=prd'
      ]

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _BUILD_ID: $BUILD_ID
